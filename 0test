#!/usr/bin/env python
# Copyright (C) 2010, Thomas Leonard
# Visit http://0install.net for details.

import os, traceback, sys
from optparse import OptionParser

zi = os.environ.get("0TEST_ZEROINSTALL", None)
if zi is not None:
	sys.path.insert(0, zi)
# (else using distro version)

from zeroinstall import SafeException
from zeroinstall.injector import autopolicy, iface_cache, model, run, handler, arch

import test_spec, runner, reporting

version = '0.4'

parser = OptionParser(usage="usage: %prog [INTERFACE VERSION ...] ... [-- ARGS]\n\n"
		"For example, to test two versions of 0compile against two versions of Zero Install:\n\n"
		"0test http://0install.net/2006/interfaces/0compile.xml 0.19 0.20 \\\n"
		"      http://0install.net/2007/interfaces/ZeroInstall.xml 0.47 0.48\n\n"
		"The ARGS, if any, are passed through to the program's test script.")

parser.add_option("", "--html", help="write results as HTML", action='store', metavar='OUTPUT')
parser.add_option("-o", "--offline", help="run in off-line mode", action='store_true')
parser.add_option("-t", "--test-command", help="specify a custom test command", action='store', metavar='CMD')
parser.add_option("-v", "--verbose", help="more verbose output", action='count')
parser.add_option("-V", "--version", help="display version information", action='store_true')
parser.disable_interspersed_args()

(options, args) = parser.parse_args()

if options.version:
	print "0test (zero-install) " + version
	print "Copyright (C) 2010 Thomas Leonard"
	print "This program comes with ABSOLUTELY NO WARRANTY,"
	print "to the extent permitted by law."
	print "You may redistribute copies of this program"
	print "under the terms of the GNU General Public License."
	print "For more information about these matters, see the file named COPYING."
	sys.exit(0)

if not args:
	parser.print_help()
	sys.exit(1)

if options.verbose:
	import logging
	logger = logging.getLogger()
	if options.verbose == 1:
		logger.setLevel(logging.INFO)
	else:
		logger.setLevel(logging.DEBUG)

try:
	spec = test_spec.parse_arguments(options, args)

	if options.html and len(spec.test_ifaces) < 2:
		print >>sys.stderr, "Need versions for at least two interfaces for --html mode."
		possible_deps = set()
		for impl in iface_cache.iface_cache.get_feed(spec.test_iface).implementations.values():
			for dep in impl.requires:
				if dep.interface not in spec.test_matrix:
					possible_deps.add(dep.interface)
		if possible_deps:
			print "Suggestions:"
			for url in possible_deps:
				print "-", url

		sys.exit(1)

	if 'DISPLAY' in os.environ and not spec.test_wrapper:
		del os.environ['DISPLAY']

	results = runner.run_test_combinations(spec)

	reporting.print_summary(results)

	html_file = options.html

	if html_file:
		doc = reporting.format_html(results)
		stream = open(html_file, 'w')
		doc.writexml(stream, encoding = 'utf8')
		stream.close()
except SafeException, ex:
	if options.verbose: raise
	try:
		print >>sys.stderr, unicode(ex)
	except:
		print >>sys.stderr, repr(ex)
	sys.exit(1)


if results.by_status['failed'] or results.by_status['skipped']:
	sys.exit(1)
